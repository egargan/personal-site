---
import Base from "$layouts/Base.astro";
import Nav from "$lib/components/nav/Nav.astro";
import { formatDateLong } from "$lib/utils/time";
import { getCollection, render } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);
---

<script>
  document.getElementById("back-to-top")!.addEventListener("click", () => {
    window.scrollTo({ top: 0, behavior: "smooth" });
  });
</script>

<Base title={post.data.title} description={post.data.intro}>
  <Nav />
  <main>
    <article>
      <header>
        <h1>{post.data.title}</h1>
        <p class="metadata">
          <span class="date">
            {formatDateLong(new Date(post.data.created))}
          </span>
          <span>Â·</span>
          <span>{post.data.readTimeMins} minute read</span>
        </p>
      </header>
      <Content />
      <footer>
        <p>Thanks for reading!</p>
        <div class="footer-links">
          <button class="link-button" id="back-to-top">Back to Top</button>
          <a href="/">Back Home</a>
        </div>
      </footer>
    </article>
  </main>
</Base>

<style>
  main {
    border-radius: 4px;
    background-color: var(--white);
  }

  article {
    margin-top: 64px;
    padding-bottom: 64px;
  }

  header {
    margin-bottom: 40px;
  }

  h1 {
    margin-bottom: 12px;
    font-weight: 600;
    font-size: 30px;
  }

  p.metadata {
    color: var(--text-two);
  }

  p.metadata > span {
    display: inline-block;
  }

  p.metadata > span:not(:last-child) {
    margin-right: 6px;
  }

  footer {
    margin-top: 4rem;
    width: 100%;

    display: flex;
    justify-content: space-between;

    font-size: 0.95rem;
    line-height: 1.25rem;
  }

  footer > p {
    margin: 0;
  }

  .footer-links {
    display: flex;
    gap: 24px;
    white-space: nowrap;
  }

  @media (min-width: 640px) {
    article {
      margin-top: 76px;
    }
  }

  @media (min-width: 820px) {
    article {
      padding-bottom: 320px;
    }
  }

  /* -- Blog styles ------ */

  .post-content {
    width: 100%;
  }

  :global(h2) {
    margin-top: 64px;
    margin-bottom: 12px;
    font-weight: 600;
    font-size: 24px;
  }

  :global(h3) {
    margin-top: 64px;
    margin-bottom: 12px;
    font-weight: 600;
    font-size: 21px;
  }

  :global(.code-block-container) {
    border-radius: 5px;
    background-color: var(--background-two) !important;

    margin: 0;

    overflow: clip;

    font-size: 14px;
  }

  :global(.code-block-title-bar) {
    display: grid;
    grid-template-columns: 1fr max-content max-content;

    padding-top: 4px;
    padding-bottom: 2px;

    background-color: var(--background-three);
    border-bottom: 1px solid var(--outline);
  }

  :global(.code-block-title) {
    display: inline-flex;
    align-items: center;
    gap: 8px;

    font-size: 16px;
    color: var(--text-two);
  }

  :global(.filetype-icon) {
    width: 16px;
    height: 16px;

    margin-top: -1px;
  }

  :global(button.code-block-copy) {
    color: var(--text-two);
    stroke: var(--text-two);
    stroke-width: 1.5px;

    display: inline-flex;
    align-items: center;
    flex-direction: row-reverse;
    gap: 4px;
  }

  :global(button.code-block-copy svg) {
    width: 18px;
  }

  :global(pre) {
    background-color: unset !important;

    padding-bottom: 16px;
    padding-top: 16px;
  }

  :global(pre code) {
    /* Use grid as it's the only thing that lets us do full-width highlights */
    display: grid;
  }

  :global(pre span) {
    /* Disable italic styles in shiki themes */
    font-style: normal !important;

    display: inline-block;
  }

  :global(mark, pre .code-highlight:not(.line)) {
    border-radius: 3px;

    border-bottom-width: 1.5px;
    border-bottom-style: solid;
  }

  :global(pre .code-highlight:not(.line)) {
    margin-left: -4px;
    margin-right: -4px;

    padding: 1px 4px;

    margin-top: 1px;
    margin-bottom: 1px;
  }

  :global(pre .code-highlight.line) {
    border-left-width: 1.5px;
    border-left-style: solid;
  }

  :global(mark) {
    color: var(--text);
    padding: 3px 4px;
  }

  :global(mark.purple, pre .code-highlight.purple) {
    background-color: var(--purple-background);
    border-color: var(--purple);
  }

  :global(mark.red, pre .code-highlight.red) {
    background-color: var(--pink-background);
    border-color: var(--pink);
  }

  :global(mark.orange, pre .code-highlight.orange) {
    background-color: var(--orange-background);
    border-color: var(--orange);
  }

  :global(mark.yellow, pre .code-highlight.yellow) {
    background-color: var(--yellow-background);
    border-color: var(--yellow);
  }

  :global(mark.green, pre .code-highlight.green) {
    background-color: var(--green-background);
    border-color: var(--green);
  }

  :global(mark.cyan, pre .code-highlight.cyan) {
    background-color: var(--cyan-background);
    border-color: var(--cyan);
  }

  :global(mark.grey, pre .code-highlight.grey) {
    background-color: var(--grey-background);
  }

  :global(.code-block-title + pre) {
    padding-top: 12px;
  }

  :global(aside) {
    background-color: var(--blue-background);

    border-left: 4px solid var(--blue);
    border-radius: 2px;

    padding-top: 16px;
    padding-bottom: 16px;

    box-sizing: content-box;
  }

  :global(aside strong:first-child) {
    font-size: 19px;
    margin-bottom: 4px;
    display: block;
  }

  :global(.code-block-container, aside) {
    margin-top: 24px;
    margin-bottom: 24px;
  }

  :global(.code-block-container + .code-block-container) {
    margin-top: 0;

    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }

  :global(.code-block-container:has(+ .code-block-container)) {
    margin-bottom: -1px;

    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }

  :global(.code-highlight:not(:has(+ .code-highlight))) {
    padding-bottom: 0.175em;
  }

  :global(
      .line:not(.code-highlight) + .code-highlight,
      line.code-highlight:first-of-type
    ) {
    padding-top: 0.175em;
  }

  :global(aside > p:last-child) {
    margin-bottom: 0;
  }

  @media (max-width: 840px) {
    :global(.code-block-container, aside) {
      margin-left: -32px;
      margin-right: -32px;
    }

    :global(.code-block-title-bar, pre span.line, aside) {
      padding-left: 32px;
      padding-right: 32px;
    }

    :global(.code-block-container) {
      border-radius: 0;

      border-top: 1px solid var(--outline);
      border-bottom: 1px solid var(--outline);

      border-left: none;
      border-right: none;
    }
  }

  @media (max-width: 640px) {
    :global(.code-block-container, aside) {
      margin-left: -20px;
      margin-right: -20px;
    }

    :global(.code-block-title-bar, pre span.line, aside) {
      padding-left: 20px;
      padding-right: 20px;
    }
  }

  @media (min-width: 841px) {
    :global(.code-block-container, aside) {
      margin-left: -24px;
      margin-right: -24px;
    }

    :global(.code-block-title-bar, pre span.line, aside) {
      padding-left: 24px;
      padding-right: 24px;
    }

    :global(.code-block-container) {
      border: 1px solid var(--outline);
    }
  }

  :global(:not(pre) > code) {
    background-color: var(--background-three);
    border-radius: 4px;

    border-bottom: 1.5px solid var(--outline);

    padding-top: 4px;
    padding-bottom: 3px;

    font-size: 0.85em;
  }

  :global(:not(pre, mark) > code:after, :not(pre, mark) > code:before) {
    /* Use a non-breaking space to add padding ether side of inline code elements that avoids
  breaking up underlines. */
    content: "\00a0 ";
    letter-spacing: -0.25em;
  }

  :global(mark > code) {
    background-color: unset !important;
    border-bottom: none;
  }

  :global(code) {
    font-family: "Atkinson Hyperlegible Mono";
  }
</style>
