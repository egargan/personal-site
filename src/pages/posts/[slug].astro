---
import { getCollection, render } from "astro:content";

import Layout from "$layouts/Main.astro";
import Pre from "$lib/components/blog/Pre.astro";
import { formatDateLong } from "$lib/utils/time";
import {
  expandLines,
  compressLines,
} from "$lib/components/icons/iconoir-embeds";

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);
---

<Layout title={post.data.title} description={post.data.intro}>
  <main>
    <header>
      <h1>{post.data.title}</h1>
      <p class="metadata">
        <span class="date">
          {formatDateLong(new Date(post.data.created))}
        </span>
        <span>Â·</span>
        <span>{post.data.readTimeMins} minute read</span>
      </p>
    </header>
    <Content components={{ pre: Pre }} />
  </main>
  <footer>
    <p>Thanks for reading!</p>
    <div class="footer-links">
      <button class="link-button" id="back-to-top">Back to Top</button>
      <a href="/">Back Home</a>
    </div>
  </footer>
</Layout>

<script>
  document.getElementById("back-to-top")!.addEventListener("click", () => {
    window.scrollTo({ top: 0, behavior: "smooth" });
  });
</script>

<style
  define:vars={{
    "expand-lines-icon": expandLines(),
    "compress-lines-icon": compressLines(),
  }}
>
  main {
    margin-top: 40px;
  }

  header {
    margin-bottom: 40px;
  }

  h1 {
    margin-bottom: 12px;
    font-weight: 600;
    font-size: 30px;
  }

  p.metadata {
    color: var(--text-two);
  }

  p.metadata > span {
    display: inline-block;
  }

  p.metadata > span:not(:last-child) {
    margin-right: 6px;
  }

  footer {
    margin-top: 3rem;
    margin-bottom: 32px;
    width: 100%;

    display: flex;
    justify-content: space-between;

    font-size: 0.95rem;
    line-height: 1.25rem;
  }

  footer > p {
    margin: 0;
  }

  .footer-links {
    display: flex;
    gap: 24px;
    white-space: nowrap;
  }

  @media (min-width: 640px) {
    main {
      margin-top: 76px;
    }

    footer {
      padding-bottom: 220px;
    }
  }

  @media (min-width: 820px) {
    main,
    footer {
      width: 820px;
    }

    body {
      align-items: center;
    }
  }

  /* -- Blog styles ------ */
  /* TODO: move to separate CSS file? */

  .post-content {
    width: 100%;
  }

  :global(h2) {
    font-size: 24px;
  }

  :global(h3) {
    font-size: 21px;
  }

  :global(h2, h3) {
    padding-top: 52px;
    margin-bottom: 12px;
    font-weight: 600;
  }

  :global(h2 a, h3 a) {
    transition: text-decoration-color var(--transition-short);
    text-decoration: underline;
    text-decoration-color: transparent !important;
    text-underline-offset: 2px;
  }

  :global(h2 a:hover, h3 a:hover) {
    text-decoration-color: var(--outline) !important;
    cursor: pointer;
  }

  :global(h2 a:after, h3 a:after) {
    content: "\00a0 #";
    display: inline;
    position: relative;

    font-weight: lighter;
    max-height: 0.5em;

    color: var(--text-three);
    opacity: 0;

    left: -10px;

    transition:
      left var(--transition-short) ease-out,
      opacity var(--transition-short) ease-out;
  }

  :global(h2 a:hover:after, h3 a:hover:after) {
    left: 0px;
    opacity: 1;
  }

  :global(html) {
    /* Make sure scrolling from anchor clicks is smooth */
    scroll-behavior: smooth;
  }

  :global(mark) {
    border-radius: 3px;

    border-bottom-width: 1.5px;
    border-bottom-style: solid;

    color: var(--text);
    padding: 3px 4px;
  }

  :global(mark.purple, pre .code-highlight.purple) {
    background-color: var(--purple-background);
    border-color: var(--purple);
  }

  :global(mark.red, pre .code-highlight.red) {
    background-color: var(--pink-background);
    border-color: var(--pink);
  }

  :global(mark.orange, pre .code-highlight.orange) {
    background-color: var(--orange-background);
    border-color: var(--orange);
  }

  :global(mark.yellow, pre .code-highlight.yellow) {
    background-color: var(--yellow-background);
    border-color: var(--yellow);
  }

  :global(mark.green, pre .code-highlight.green) {
    background-color: var(--green-background);
    border-color: var(--green);
  }

  :global(mark.cyan, pre .code-highlight.cyan) {
    background-color: var(--cyan-background);
    border-color: var(--cyan);
  }

  :global(mark.grey, pre .code-highlight.grey) {
    background-color: var(--grey-background);
  }

  :global(aside) {
    background-color: var(--blue-background);

    border-left: 4px solid var(--blue);
    border-radius: 2px;

    padding-top: 16px;
    padding-bottom: 16px;

    margin-top: 18px;
    margin-bottom: 24px;

    box-sizing: content-box;
  }

  :global(aside strong:first-child) {
    font-size: 19px;
    margin-bottom: 4px;
    display: block;
  }

  :global(aside > p:last-child) {
    margin-bottom: 0;
  }

  :global(main ul:not(.ignore-list-style), main ol:not(.ignore-list-style)) {
    list-style-type: disc;
    padding-left: 12px;
    margin-bottom: 1em;
  }

  :global(
      main ul:not(.ignore-list-style) li,
      main ol:not(.ignore-list-style) li
    ) {
    padding-left: 8px;
    margin-bottom: 0.5em;
  }

  :global(.feature) {
    border-radius: 5px;
    background-color: var(--background-two) !important;

    margin: 0;
    overflow: clip;

    display: grid;
    grid-template-rows: min-content 1fr;

    font-size: 13px;
  }

  :global(.feature-title-bar, .feature-tablist) {
    padding-top: 4px;

    height: 34px;

    background-color: var(--background-three);
    border-bottom: 1px solid var(--outline);

    font-size: 16px;
    color: var(--text-two);
  }

  :global(.feature, .feature-tabs) {
    margin-top: 28px;
    margin-bottom: 28px;
  }

  :global(.feature-group .feature:not(:last-of-type)) {
    margin-bottom: -1px;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }

  :global(.feature-group .feature:not(:first-of-type)) {
    margin-top: 0;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }

  @media (min-width: 1080px) {
    :global(.feature-group-x) {
      width: 1080px;
      place-self: center;

      display: flex;
      flex-direction: row;
    }

    :global(.feature-group-x :is(.feature, .feature-tabs)) {
      flex: var(--flex-n, 1);
    }

    :global(.feature-group-x .feature:not(:last-of-type)) {
      margin-right: 0;
      margin-left: 0;

      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    :global(.feature-group-x .feature:not(:first-of-type)) {
      margin-left: -1px;
      margin-right: 0;

      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }

    :global(
        .feature-group-x
          .feature:not(:first-of-type)
          :is(.feature-title-bar, .feature-tablist, .feature-pad, pre .line)
      ) {
      padding-left: 16px;
    }

    :global(
        .feature-group-x
          .feature:not(:last-of-type)
          :is(.feature-title-bar, .feature-tablist, .feature-pad, pre .line)
      ) {
      padding-right: 16px;
    }
  }

  @media (max-width: 1080px) {
    :global(.feature-group-x .feature:not(:first-of-type)) {
      margin-top: 0;
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }

    :global(.feature-group-x .feature:not(:last-of-type)) {
      margin-bottom: -1px;
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }
  }

  @media (max-width: 820px) {
    :global(.feature) {
      border-radius: 0;

      border-top: 1px solid var(--outline);
      border-bottom: 1px solid var(--outline);

      border-left: none;
      border-right: none;
    }

    :global(.feature, aside) {
      margin-left: -32px;
      margin-right: -32px;
    }

    :global(
        .feature-title-bar,
        .feature-tablist,
        .feature-pad,
        pre .line,
        aside
      ) {
      padding-left: 32px;
      padding-right: 32px;
    }
  }

  @media (min-width: 820px) {
    :global(.feature, .feature-tabs) {
      border: 1px solid var(--outline);
    }

    :global(.feature, aside) {
      margin-left: -24px;
      margin-right: -24px;
    }

    :global(
        .feature-title-bar,
        .feature-tablist,
        .feature-pad,
        pre .line,
        aside
      ) {
      padding-left: 24px;
      padding-right: 24px;
    }
  }

  @media (max-width: 640px) {
    :global(.feature, aside) {
      margin-left: -20px;
      margin-right: -20px;
    }

    :global(
        .feature-title-bar,
        .feature-tablist,
        .feature-pad,
        pre .line,
        aside
      ) {
      padding-left: 20px;
      padding-right: 20px;
    }
  }

  :global(:not(pre) > code) {
    background-color: var(--background-three);
    border-radius: 4px;

    border-bottom: 1.5px solid var(--outline);

    padding-top: 4px;
    padding-bottom: 3px;

    font-size: 0.85em;
  }

  :global(:not(pre, mark) > code:after, :not(pre, mark) > code:before) {
    /* Use a non-breaking space to add padding ether side of inline code elements that avoids
  breaking up underlines. */
    content: "\00a0 ";
    letter-spacing: -0.25em;
  }

  :global(mark > code) {
    background-color: unset !important;
    border-bottom: none;
  }

  :global(code) {
    font-family: "Atkinson Hyperlegible Mono";
  }
</style>
