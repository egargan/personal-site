---
import Layout from "$layouts/Main.astro";
import BlogListItem from "$lib/components/BlogListItem.astro";
import LabListItem from "$lib/components/LabListItem.astro";
import { getCollection } from "astro:content";

// TODO: rename "blog" to something like "writing" if we like this idea
const writing = await getCollection("blog");
const labs = await getCollection("labs");

const posts = [...writing, ...labs].sort((a, b) =>
  a.data.created < b.data.created ? 1 : -1,
);
---

<Layout
  title="Posts â€¢ Ed Gargan"
  description="Blog posts, experiments, and doodles for web people">
  <main>
    <ul>
      {
        posts.map((post, i) => {
          if (post.collection === "blog") {
            return (
              <li
                style={{ "--fly-in-delay": `${30 * (i + 1)}ms` }}
                class="blog fly-in">
                <BlogListItem {post} bigHeader />
              </li>
            );
          } else if (post.collection === "labs") {
            return (
              <li
                style={{ "--fly-in-delay": `${30 * (i + 1)}ms` }}
                class="lab fly-in">
                <LabListItem {post} />
              </li>
            );
          }
        })
      }
    </ul>
  </main>
</Layout>

<script>
  import Masonry from "masonry-layout";
  import { createResizeListener } from "$lib/utils/resize";

  let masonry: Masonry;

  const arrangeMasonryLayout = () => {
    const gutter = parseInt(
      getComputedStyle(document.querySelector("main")!).getPropertyValue(
        "--gutter",
      ),
    );

    if (window.innerWidth < 640) {
      masonry.destroy?.();
    } else {
      console.log({
        gutter,
      });

      masonry = new Masonry("main > ul", {
        itemSelector: "main > ul > li",
        resize: false,
        transitionDuration: 0,
        gutter,
      });
    }
  };

  arrangeMasonryLayout();

  createResizeListener(arrangeMasonryLayout, [640, 860, 1024]);
</script>

<style>
  main {
    --gutter: 48px;
  }

  li {
    width: 100%;
  }

  @media (min-width: 820px) {
    :global(body > header > .wrapper) {
      width: 820px;
    }
  }

  @media (min-width: 860px) {
    main {
      width: 860px;
    }

    li {
      width: calc((860px / 2) - var(--gutter) - 8px);
    }

    body {
      align-items: center;
    }
  }

  @media (min-width: 1024px) {
    main {
      width: 1026px;
      --gutter: 64px;
    }

    li {
      width: calc((1024px / 2) - var(--gutter));
    }
  }

  main {
    margin-top: 48px;
  }

  @media (max-width: 640px) {
    main {
      margin-top: 32px;
    }
  }
</style>
