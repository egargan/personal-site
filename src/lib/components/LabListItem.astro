---
import { formatDateLong } from "$lib/utils/time";
import type { CollectionEntry } from "astro:content";
import PostChip from "./PostChip.astro";

const { post, i } = Astro.props as {
  post: CollectionEntry<"labs">;
  i: number;
};

let previewObjectPosition;

switch (post.id) {
  case "handshake":
    previewObjectPosition = "center 40%";
    break;
  case "parliament-chart":
    previewObjectPosition = "center 30%";
    break;
  case "record-stack":
    previewObjectPosition = "center top";
    break;
  default:
    previewObjectPosition = "center";
}
---

<article
  class="lab-list-item fly-in"
  style={{ "--fly-in-delay": `${30 * (i + 1)}ms` }}>
  <a class="ignore-link-style" href={`/posts/${post.id}`}>
    <video
      loop
      muted
      role="presentation"
      style={`object-position: ${previewObjectPosition};`}
      poster={`/posts/${post.id}/preview.jpg`}
      src={`/posts/${post.id}/preview.webm`}>
    </video>
    <div class="gradient"></div>
    <div class="header">
      <div class="title-row">
        <h2>{post.data.title}</h2>
        <PostChip type="lab" />
      </div>

      <p class="metadata">
        <span class="date">{formatDateLong(new Date(post.data.created))}</span>
      </p>
    </div>
  </a>
</article>

<script>
  const articles = document.querySelectorAll("article.lab-list-item");

  articles.forEach((article) => {
    article.addEventListener("mouseenter", () => {
      article.querySelector("video")?.play();
    });

    article.addEventListener("mouseleave", () => {
      article.querySelector("video")?.pause();
    });
  });
</script>

<style>
  article {
    margin-bottom: 40px;

    border-radius: 6px;
    overflow: clip;

    margin-left: -6px;
    margin-right: -6px;
  }

  a {
    display: grid;
    grid-template-columns: 1fr;
    align-items: end;
  }

  a > * {
    grid-area: 1/1;
  }

  .gradient {
    width: 100%;
    height: 100%;

    grid-area: 1/1;

    z-index: 1;

    /* background: linear-gradient( */
    /*   to bottom, */
    /*   hsla(var(--background-hsl) / 10%) 50%, */
    /*   hsla(var(--background-hsl) / 85%) 90% */
    /* ); */
    /* background: linear-gradient( */
    /*   to bottom, */
    /*   hsla(244deg 17 17 / 10%) 50%, */
    /*   hsla(244deg 17 17 / 85%) 90% */
    /* ); */
    background: linear-gradient(
      to bottom,
      hsla(244deg 17 17 / 5%) 55%,
      hsla(244deg 17 17 / 85%) 95%
    );
  }

  .header {
    padding: 6px 8px;
    z-index: 2;
  }

  @media (min-width: 640px) {
    .header {
      padding: 8px 12px;
      z-index: 2;
    }
  }

  video {
    border-radius: 4px;

    height: 200px;
    width: 100%;

    object-fit: cover;
    /* object-position: center; */
    transition: opacity var(--transition-short);

    /* opacity: 90%; */
  }

  a:hover video {
    opacity: 100%;
  }

  .title-row {
    white-space: nowrap;
  }

  h2 {
    display: inline;

    font-size: 22px;
    line-height: 32px;
    font-weight: 700;

    text-decoration: none;
    text-decoration-color: transparent;
    text-decoration-skip-ink: none;
    text-decoration-thickness: 0;
    text-underline-offset: 1px;

    transition-duration: 50ms;
    transition: text-decoration-color var(--transition-blink);

    color: white;
    /* color: hsl(240deg 100 99); */

    text-shadow: 0px 0px 2px hsla(244deg 17 17 / 60%);
    /* text-shadow: 0px 0px 2px hsla(var(--background-hsl) / 70%); */
  }

  a:hover h2 {
    text-decoration: underline;
    text-decoration-color: var(--blue);
    text-decoration-thickness: 2px;
  }

  p {
    margin-bottom: 12px;
    color: hsl(240deg 19 75);

    /* color: var(--text-two); */
    text-shadow: 0px 0px 2px hsla(244deg 17 17 / 80%);
    /* text-shadow: 0px 0px 2px hsla(var(--background-hsl) / 70%); */
  }

  p.metadata {
    margin: 0;
  }

  p.metadata > span {
    display: inline-block;
  }

  p.metadata > span:not(:last-child) {
    margin-right: 8px;
  }
</style>
