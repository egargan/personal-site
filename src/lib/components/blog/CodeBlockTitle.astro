---
let { lang, title } = Astro.props as {
  lang: string;
  title?: string;
};

let prettyLanguage, languageIconSrc;

if (lang) {
  switch (lang) {
    case "typescript":
      prettyLanguage = "TypeScript";
      break;
    case "javascript":
      prettyLanguage = "JavaScript";
      break;
    default:
      prettyLanguage = lang.charAt(0).toUpperCase() + lang.slice(1);
  }

  switch (lang) {
    case "typescript":
    case "javascript":
    default:
      languageIconSrc = `https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/${lang}/${lang}-original.svg`;
      break;
    case "vimscript":
      languageIconSrc =
        "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/vim/vim-original.svg";
      break;
  }
}
---

<span class="code-block-title">
  {
    languageIconSrc && (
      <img src={languageIconSrc} role="presentation" class="filetype-icon" />
    )
  }
  {title ? title : prettyLanguage}
</span>

<style>
  .code-block-title {
    display: inline-flex;
    align-items: baseline;
    gap: 6px;

    font-size: 16px;
    color: var(--text-two);

    padding-bottom: 3px;
  }

  .filetype-icon {
    width: 16px;
    height: 16px;
    margin-top: -1px;
    align-self: center;
  }

  .code-block-title + pre {
    padding-top: 12px;
  }
</style>
